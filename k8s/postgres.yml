apiVersion: v1
kind: Service
metadata:
  name: conote-postgres
  labels:
    app: conote
    tier: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: conote
    tier: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim # Create a PersistentVolumeClaim to request a PersistentVolume storage
metadata:
  name: postgres-pv-claim
  labels:
    app: conote
    tier: postgres
spec:
  accessModes:
    - ReadWriteOnce # ReadWriteOnce means the volume can be mounted as read-write by a single Node
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conote-postgres
  labels:
    app: conote
    tier: postgres
spec:
  selector:
    matchLabels:
      app: conote
      tier: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: conote
        tier: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13.2-alpine # from docker-hub
          env:
            # - name: MYSQL_DATABASE
            #   valueFrom:
            #     secretKeyRef:
            #       name: mysql-db-url
            #       key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-user-pass
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-user-pass
                  key: password
            - name: PGDATA
              value: '/var/lib/postgresql/data/pgdata'
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-persistent-storage # This name should match the name specified in `volumes.name`
              mountPath: /var/lib/postgresql/data
      volumes: # A PersistentVolume is mounted as a volume to the Pod
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
