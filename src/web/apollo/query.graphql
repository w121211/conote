fragment author on Author {
  __typename
  id
  name
}

fragment shot on Shot {
  __typename
  id
  userId
  authorId
  linkId
  targetId
  choice
}

fragment vote on Vote {
  __typename
  id
  pollId
  choiceIdx
}

fragment poll on Poll {
  __typename
  id
  userId
  choices
  count {
    id
    nVotes
  }
  createdAt
  updatedAt
}

# fragment commentCount on CommentCount {
#   __typename
#   id
#   nViews
#   nUps
#   nDowns
# }

# fragment commentLike on CommentLike {
#   __typename
#   id
#   commentId
#   choice
#   updatedAt
# }

# fragment comment on Comment {
#   __typename
#   id
#   userId
#   oauthorName
#   status
#   content
#   vote {
#     ...vote
#   }
#   count {
#     ...commentCount
#   }
#   createdAt
#   updatedAt
# }

# fragment boardLike on BoardLike {
#   __typename
#   id
#   boardId
#   choice
#   updatedAt
# }

# fragment boardCount on BoardCount {
#   __typename
#   id
#   nViews
#   nUps
#   nDowns
# }

# fragment board on Board {
#   __typename
#   id
#   userId
#   bulletId
#   cardId
#   status
#   hashtag
#   meta
#   content
#   poll {
#     ...poll
#   }
#   count {
#     ...boardCount
#   }
#   createdAt
#   updatedAt
# }

fragment link on Link {
  __typename
  id
  url
  authorId
}

fragment emojiLike on EmojiLike {
  __typename
  id
  emojiId
  choice
  createdAt
  updatedAt
}

fragment emojiCount on EmojiCount {
  __typename
  id
  nUps
  nDowns
}

fragment emoji on Emoji {
  __typename
  id
  userId
  # authorName
  # bulletId
  # cardId
  text
  count {
    ...emojiCount
  }
  createdAt
  updatedAt
}

fragment bullet on Bullet {
  id
  cardId
  # createdAt
  # updatedAt
}

# fragment cardHead on CardHead {
#   __typename
#   id
#   userId
#   content
#   timestamp
#   prevId
# }

fragment cardBody on CardBody {
  __typename
  id
  userId
  content
  timestamp
  prevId
}

fragment cardMeta on CardMeta {
  redirects
  duplicates
  url
  author
  date
  description
  keywords
  title
}

fragment card on Card {
  __typename
  id
  type
  symbol
  link {
    ...link
  }
  meta {
    ...cardMeta
  }
  body {
    ...cardBody
  }
  createdAt
  updatedAt
}

fragment cardEntry on CardEntry {
  __typename
  id
  type
  symbol
  createdAt
  updatedAt
}

query Author($id: ID!) {
  author(id: $id) {
    ...author
  }
}

query SearchAll($term: String!) {
  searchAll(term: $term)
}

query LatestCardEntries($afterId: String) {
  latestCardEntries(afterId: $afterId) {
    ...cardEntry
  }
}

query Link($url: String!) {
  link(url: $url) {
    ...link
  }
}

query Card($symbol: String!) {
  card(symbol: $symbol) {
    ...card
  }
}

query CardMeta($symbol: String!) {
  cardMeta(symbol: $symbol) {
    ...cardMeta
  }
}

query WebpageCard($url: String!) {
  webpageCard(url: $url) {
    ...card
  }
}

query Emojis($bulletId: ID!) {
  emojis(bulletId: $bulletId) {
    ...emoji
  }
}

query Bullet($id: ID!) {
  bullet(id: $id) {
    ...bullet
  }
}

query Poll($id: ID!) {
  poll(id: $id) {
    ...poll
  }
}

query Shot($id: ID!) {
  shot(id: $id) {
    ...shot
  }
}

query ShotsBySource($linkId: ID!) {
  shotsBySource(linkId: $linkId) {
    ...shot
  }
}

query ShotsByAuthor($authorId: ID!, $targetId: ID!) {
  shotsByAuthor(authorId: $authorId, targetId: $targetId) {
    ...shot
  }
}

# query Board($id: ID!) {
#   board(id: $id) {
#     ...board
#   }
# }

# query Comments($boardId: ID!, $afterId: ID) {
#   comments(boardId: $boardId, afterId: $afterId) {
#     ...comment
#   }
# }

query Me {
  me {
    id
  }
}

# query MyVotes {
#   myVotes {
#     ...vote
#   }
# }

# query MyCommentLikes {
#   myCommentLikes {
#     ...commentLike
#   }
# }

# query MyBoardLikes {
#   myBoardLikes {
#     ...boardLike
#   }
# }

query MyShots($targetId: ID!) {
  myShots(targetId: $targetId) {
    ...shot
  }
}

query MyVotes($pollId: ID!) {
  myVotes(pollId: $pollId) {
    ...vote
  }
}

query MyEmojiLike($emojiId: ID!) {
  myEmojiLike(emojiId: $emojiId) {
    ...emojiLike
  }
}

mutation CreateSymbolCard($data: CardInput!) {
  createSymbolCard(data: $data) {
    ...card
  }
}

mutation UpdateCardMeta($symbol: String!, $data: CardMetaInput!) {
  updateCardMeta(symbol: $symbol, data: $data) {
    ...cardMeta
  }
}

mutation CreateCardBody($cardSymbol: String!, $data: CardBodyInput!) {
  createCardBody(cardSymbol: $cardSymbol, data: $data) {
    ...cardBody
  }
}

mutation CreatePoll($data: PollInput!) {
  createPoll(data: $data) {
    ...poll
  }
}

mutation CreateVote($pollId: ID!, $data: VoteInput!) {
  createVote(pollId: $pollId, data: $data) {
    ...vote
  }
}

mutation CreateShot($data: ShotInput!) {
  createShot(data: $data) {
    ...shot
  }
}

# mutation CreateComment($boardId: ID!, $pollId: ID, $data: CommentInput!) {
#   createComment(boardId: $boardId, pollId: $pollId, data: $data) {
#     ...comment
#   }
# }

# mutation createAuthorVote($pollId: ID!, $authorName: String!, $data: VoteInput!) {
#   createAuthorVote(pollId: $pollId, authorName: $authorName, data: $data) {
#     ...vote
#   }
# }

# mutation CreateOauthorComment($boardId: ID!, $pollId: ID, $oauthorName: String!, $data: CommentInput!) {
#   createOauthorComment(boardId: $boardId, pollId: $pollId, oauthorName: $oauthorName, data: $data) {
#     ...comment
#   }
# }

mutation CreateEmoji($bulletId: ID!, $text: EmojiText!) {
  createEmoji(bulletId: $bulletId, text: $text) {
    emoji {
      ...emoji
    }
    like {
      ...emojiLike
    }
  }
}

mutation UpsertEmojiLike($emojiId: ID!, $data: LikeInput!) {
  upsertEmojiLike(emojiId: $emojiId, data: $data) {
    like {
      ...emojiLike
    }
    count {
      ...emojiCount
    }
  }
}

# mutation CreateCommentLike($commentId: ID!, $data: LikeInput!) {
#   createCommentLike(commentId: $commentId, data: $data) {
#     like {
#       ...commentLike
#     }
#     count {
#       ...commentCount
#     }
#   }
# }

# mutation UpdateCommentLike($id: ID!, $data: LikeInput!) {
#   updateCommentLike(id: $id, data: $data) {
#     like {
#       ...commentLike
#     }
#     count {
#       ...commentCount
#     }
#   }
# }

# mutation CreateBoardLike($boardId: ID!, $data: LikeInput!) {
#   createBoardLike(boardId: $boardId, data: $data) {
#     like {
#       ...boardLike
#     }
#     count {
#       ...boardCount
#     }
#   }
# }

# mutation UpdateBoardLike($id: ID!, $data: LikeInput!) {
#   updateBoardLike(id: $id, data: $data) {
#     like {
#       ...boardLike
#     }
#     count {
#       ...boardCount
#     }
#   }
# }

# mutation SignUp($email: String!, $password: String!) {
#   signUp(email: $email, password: $password) {
#     id
#     email
#   }
# }

# mutation SignIn($email: String!, $password: String!) {
#   signIn(email: $email, password: $password) {
#     token
#     user {
#       id
#     }
#   }
# }

# mutation SignOut {
#   signOut
# }
